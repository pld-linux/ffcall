Index: callback/vacall_r/vacall-sparc64.S
===================================================================
RCS file: /sources/libffcall/ffcall/callback/vacall_r/vacall-sparc64.S,v
retrieving revision 1.3
diff -u -r1.3 vacall-sparc64.S
--- callback/vacall_r/vacall-sparc64.S	23 May 2005 10:15:06 -0000	1.3
+++ callback/vacall_r/vacall-sparc64.S	11 Mar 2008 21:52:48 -0000
@@ -8,6 +8,8 @@
 	.type	 __vacall_r,$function
 	.proc	020
 __vacall_r:
+	.register       %g2, $scratch
+	.register       %g3, $scratch
 	!$PROLOGUE$ 0
 	save	%sp, -448, %sp
 	!$PROLOGUE$ 1
Index: vacall/vacall-sparc64.S
===================================================================
RCS file: /sources/libffcall/ffcall/vacall/vacall-sparc64.S,v
retrieving revision 1.4
diff -u -r1.4 vacall-sparc64.S
--- vacall/vacall-sparc64.S	23 May 2005 10:15:06 -0000	1.4
+++ vacall/vacall-sparc64.S	11 Mar 2008 21:52:50 -0000
@@ -8,6 +8,8 @@
 	.type	 __vacall,$function
 	.proc	020
 __vacall:
+	.register       %g2, $scratch
+	.register       %g3, $scratch
 	!$PROLOGUE$ 0
 	save	%sp, -448, %sp
 	!$PROLOGUE$ 1
Index: avcall/avcall.h.in
===================================================================
RCS file: /sources/libffcall/ffcall/avcall/avcall.h.in,v
retrieving revision 1.25
diff -u -r1.25 avcall.h.in
--- avcall/avcall.h.in	2 Nov 2007 15:24:53 -0000	1.25
+++ avcall/avcall.h.in	11 Mar 2008 21:52:44 -0000
@@ -345,8 +345,7 @@
 #if defined(__sparc64__)
   /* store the floating-point arguments in an extra array */
   int			anum;		/* redundant: (LIST).aptr = &(LIST).args[(LIST).anum] */
-  unsigned int		farg_mask;	/* bitmask of those entries in farg[] which have a value */
-  unsigned int		darg_mask;	/* bitmask of those entries in args[] which have a double value */
+  unsigned int		darg_mask;	/* bitmask of those entries in args[] which have a float or double value */
 #endif
 #if defined(__ia64__) || defined(__x86_64__)
   /* store the floating-point arguments in an extra array */
@@ -430,7 +429,6 @@
 #if defined(__sparc64__)
 #define __av_start1(LIST)						\
    (LIST).anum = 0,							\
-   (LIST).farg_mask = 0,						\
    (LIST).darg_mask = 0,						\
    (LIST).aptr = &(LIST).args[0],					\
    (LIST).eptr = &(LIST).args[__AV_ALIST_WORDS],
@@ -870,8 +868,8 @@
  */
 #define av_float(LIST,VAL)						\
   ((LIST).aptr >= __av_eptr(LIST)					\
-   ? -1 : (((LIST).anum < 16 && ((LIST).farg_mask |= (1 << (LIST).anum))), \
-	   (*(float*)(LIST).aptr = (float)(VAL)),			\
+   ? -1 : (((LIST).anum < 16 && ((LIST).darg_mask |= (1 << (LIST).anum))), \
+	   (((float*)(LIST).aptr)[1] = (float)(VAL)),			\
 	   (LIST).anum++,						\
 	   (LIST).aptr++,						\
 	   0))
@@ -1300,10 +1298,8 @@
       ? -1 : (ASSIGN(TYPE,TYPE_SIZE,TYPE_ALIGN,(void*)((__avword)(LIST).aptr-(TYPE_SIZE)),VAL),\
 	      (LIST).aptr = (__avword*)(((__avword)(LIST).aptr+sizeof(__avword)-1) & -(long)sizeof(__avword)),\
 	      ((LIST).anum < 16						\
-		&& ((LIST).farg_mask |= (-1 << (LIST).anum),		\
-		    (LIST).darg_mask |= (-1 << (LIST).anum))),		\
+		&& ((LIST).darg_mask |= (-1 << (LIST).anum))),		\
 	      (LIST).anum += (((((TYPE_SIZE)+(TYPE_ALIGN)-1) & -(long)(TYPE_ALIGN)) + sizeof(__avword)-1) & -(long)sizeof(__avword))/sizeof(__avword),\
-	      (LIST).farg_mask &= (1 << ((LIST).anum < 16 ? (LIST).anum : 16)) - 1, \
 	      (LIST).darg_mask &= (1 << ((LIST).anum < 16 ? (LIST).anum : 16)) - 1, \
 	      0)))
 #endif
Index: avcall/avcall-sparc64.c
===================================================================
RCS file: /sources/libffcall/ffcall/avcall/avcall-sparc64.c,v
retrieving revision 1.3
diff -u -r1.3 avcall-sparc64.c
--- avcall/avcall-sparc64.c	23 May 2005 10:17:21 -0000	1.3
+++ avcall/avcall-sparc64.c	11 Mar 2008 21:52:42 -0000
@@ -86,7 +86,6 @@
 #define RETURN(TYPE,VAL)	(*(TYPE*)l->raddr = (TYPE)(VAL))
 #define OFFSETOF(struct,member) ((int)&(((struct*)0)->member))
 
-register void* callee	__asm__("%g2");  /* any global or local register */
 register __avword o0	__asm__("%o0");
 register __avword o1	__asm__("%o1");
 register __avword o2	__asm__("%o2");
@@ -102,83 +101,58 @@
   register double dret	__asm__("%f0");  /* %f0,%f1 */
 
   __avword trampoline[6];		/* room for a trampoline */
-  __avword space[__AV_ALIST_WORDS];	/* space for callee's stack frame */
-  __avword *argframe = sp + 17;		/* stack offset for argument list */
   int arglen = l->aptr - l->args;
   __avword i;
 
-  if (l->farg_mask) {
-    /* push leading float args */
-    if (l->farg_mask & (1<<0))
-      __asm__("ld %1(%0),%%f1" : : "p" (l), "i" OFFSETOF(av_alist,args[0]));
-    if (l->farg_mask & (1<<1))
-      __asm__("ld %1(%0),%%f3" : : "p" (l), "i" OFFSETOF(av_alist,args[1]));
-    if (l->farg_mask & (1<<2))
-      __asm__("ld %1(%0),%%f5" : : "p" (l), "i" OFFSETOF(av_alist,args[2]));
-    if (l->farg_mask & (1<<3))
-      __asm__("ld %1(%0),%%f7" : : "p" (l), "i" OFFSETOF(av_alist,args[3]));
-    if (l->farg_mask & (1<<4))
-      __asm__("ld %1(%0),%%f9" : : "p" (l), "i" OFFSETOF(av_alist,args[4]));
-    if (l->farg_mask & (1<<5))
-      __asm__("ld %1(%0),%%f11" : : "p" (l), "i" OFFSETOF(av_alist,args[5]));
-    if (l->farg_mask & (1<<6))
-      __asm__("ld %1(%0),%%f13" : : "p" (l), "i" OFFSETOF(av_alist,args[6]));
-    if (l->farg_mask & (1<<7))
-      __asm__("ld %1(%0),%%f15" : : "p" (l), "i" OFFSETOF(av_alist,args[7]));
-    if (l->farg_mask & (1<<8))
-      __asm__("ld %1(%0),%%f17" : : "p" (l), "i" OFFSETOF(av_alist,args[8]));
-    if (l->farg_mask & (1<<9))
-      __asm__("ld %1(%0),%%f19" : : "p" (l), "i" OFFSETOF(av_alist,args[9]));
-    if (l->farg_mask & (1<<10))
-      __asm__("ld %1(%0),%%f21" : : "p" (l), "i" OFFSETOF(av_alist,args[10]));
-    if (l->farg_mask & (1<<11))
-      __asm__("ld %1(%0),%%f23" : : "p" (l), "i" OFFSETOF(av_alist,args[11]));
-    if (l->farg_mask & (1<<12))
-      __asm__("ld %1(%0),%%f25" : : "p" (l), "i" OFFSETOF(av_alist,args[12]));
-    if (l->farg_mask & (1<<13))
-      __asm__("ld %1(%0),%%f27" : : "p" (l), "i" OFFSETOF(av_alist,args[13]));
-    if (l->farg_mask & (1<<14))
-      __asm__("ld %1(%0),%%f29" : : "p" (l), "i" OFFSETOF(av_alist,args[14]));
-    if (l->farg_mask & (1<<15))
-      __asm__("ld %1(%0),%%f31" : : "p" (l), "i" OFFSETOF(av_alist,args[15]));
-  }
   if (l->darg_mask) {
-    /* push leading double args */
+    /* push leading float/double args */
     if (l->darg_mask & (1<<0))
-      __asm__("ldd %1(%0),%%f0" : : "p" (l), "i" OFFSETOF(av_alist,args[0]));
+      __asm__("ldd [%0+%1],%%f0" : : "p" (l), "i" OFFSETOF(av_alist,args[0]));
     if (l->darg_mask & (1<<1))
-      __asm__("ldd %1(%0),%%f2" : : "p" (l), "i" OFFSETOF(av_alist,args[1]));
+      __asm__("ldd [%0+%1],%%f2" : : "p" (l), "i" OFFSETOF(av_alist,args[1]));
     if (l->darg_mask & (1<<2))
-      __asm__("ldd %1(%0),%%f4" : : "p" (l), "i" OFFSETOF(av_alist,args[2]));
+      __asm__("ldd [%0+%1],%%f4" : : "p" (l), "i" OFFSETOF(av_alist,args[2]));
     if (l->darg_mask & (1<<3))
-      __asm__("ldd %1(%0),%%f6" : : "p" (l), "i" OFFSETOF(av_alist,args[3]));
+      __asm__("ldd [%0+%1],%%f6" : : "p" (l), "i" OFFSETOF(av_alist,args[3]));
     if (l->darg_mask & (1<<4))
-      __asm__("ldd %1(%0),%%f8" : : "p" (l), "i" OFFSETOF(av_alist,args[4]));
+      __asm__("ldd [%0+%1],%%f8" : : "p" (l), "i" OFFSETOF(av_alist,args[4]));
     if (l->darg_mask & (1<<5))
-      __asm__("ldd %1(%0),%%f10" : : "p" (l), "i" OFFSETOF(av_alist,args[5]));
+      __asm__("ldd [%0+%1],%%f10" : : "p" (l), "i" OFFSETOF(av_alist,args[5]));
     if (l->darg_mask & (1<<6))
-      __asm__("ldd %1(%0),%%f12" : : "p" (l), "i" OFFSETOF(av_alist,args[6]));
+      __asm__("ldd [%0+%1],%%f12" : : "p" (l), "i" OFFSETOF(av_alist,args[6]));
     if (l->darg_mask & (1<<7))
-      __asm__("ldd %1(%0),%%f14" : : "p" (l), "i" OFFSETOF(av_alist,args[7]));
+      __asm__("ldd [%0+%1],%%f14" : : "p" (l), "i" OFFSETOF(av_alist,args[7]));
     if (l->darg_mask & (1<<8))
-      __asm__("ldd %1(%0),%%f16" : : "p" (l), "i" OFFSETOF(av_alist,args[8]));
+      __asm__("ldd [%0+%1],%%f16" : : "p" (l), "i" OFFSETOF(av_alist,args[8]));
     if (l->darg_mask & (1<<9))
-      __asm__("ldd %1(%0),%%f18" : : "p" (l), "i" OFFSETOF(av_alist,args[9]));
+      __asm__("ldd [%0+%1],%%f18" : : "p" (l), "i" OFFSETOF(av_alist,args[9]));
     if (l->darg_mask & (1<<10))
-      __asm__("ldd %1(%0),%%f20" : : "p" (l), "i" OFFSETOF(av_alist,args[10]));
+      __asm__("ldd [%0+%1],%%f20" : : "p" (l), "i" OFFSETOF(av_alist,args[10]));
     if (l->darg_mask & (1<<11))
-      __asm__("ldd %1(%0),%%f22" : : "p" (l), "i" OFFSETOF(av_alist,args[11]));
+      __asm__("ldd [%0+%1],%%f22" : : "p" (l), "i" OFFSETOF(av_alist,args[11]));
     if (l->darg_mask & (1<<12))
-      __asm__("ldd %1(%0),%%f24" : : "p" (l), "i" OFFSETOF(av_alist,args[12]));
+      __asm__("ldd [%0+%1],%%f24" : : "p" (l), "i" OFFSETOF(av_alist,args[12]));
     if (l->darg_mask & (1<<13))
-      __asm__("ldd %1(%0),%%f26" : : "p" (l), "i" OFFSETOF(av_alist,args[13]));
+      __asm__("ldd [%0+%1],%%f26" : : "p" (l), "i" OFFSETOF(av_alist,args[13]));
     if (l->darg_mask & (1<<14))
-      __asm__("ldd %1(%0),%%f28" : : "p" (l), "i" OFFSETOF(av_alist,args[14]));
+      __asm__("ldd [%0+%1],%%f28" : : "p" (l), "i" OFFSETOF(av_alist,args[14]));
     if (l->darg_mask & (1<<15))
-      __asm__("ldd %1(%0),%%f30" : : "p" (l), "i" OFFSETOF(av_alist,args[15]));
+      __asm__("ldd [%0+%1],%%f30" : : "p" (l), "i" OFFSETOF(av_alist,args[15]));
   }
 
-  {
+  if (arglen > 6) {
+    /* alloca space is separated from the extra outgoing args area by
+     * the area for compiler temps (addressable with postive offsets from sp)
+     * but they shouldn't be needed for this function, so, effectively,
+     * space returned by alloca is safe to use as the area for extra args.
+     */
+    void *extra_args_area = __builtin_alloca(sizeof(__avword) * (arglen - 6));
+    __avword *argframe = (__avword *)extra_args_area - 6;
+#if 0
+    /* "by construction" */
+    assert(argframe == (void *)((unsigned long)(sp + 16)+2047));
+#endif
+
     int i;
     for (i = 6; i < arglen; i++)	/* push excess function args */
       argframe[i] = l->args[i];
@@ -188,7 +162,7 @@
   i = ({ register __avword iret __asm__ ("%o0");
          iret = (*l->func)(l->args[0], l->args[1], l->args[2],
 			   l->args[3], l->args[4], l->args[5]);
-         asm ("nop");	/* struct returning functions skip this instruction */
+         asm __volatile__("nop");	/* struct returning functions skip this instruction */
          iret;
        });
 
--- avcall/avcall-sparc64.S.orig	2005-05-23 12:17:21.000000000 +0200
+++ avcall/avcall-sparc64.S	2008-10-09 22:10:17.000000000 +0200
@@ -1,937 +1,907 @@
 #include "asmsparc.h"
 	.file	"avcall-sparc64.c"
-	.version	"01.01"
-.section	".text"
+	.section	".text"
 	.align 4
+	.align 32
 	.global __builtin_avcall
 	DECLARE_FUNCTION(__builtin_avcall)
-	.type	 __builtin_avcall,$function
 	.proc	04
 __builtin_avcall:
-	!$PROLOGUE$ 0
-	save	%sp, -2288, %sp
-	!$PROLOGUE$ 1
-	ldx	[%i0+40], %g3
-	ld	[%i0+60], %o7
-	add	%g3, -72, %g3
-	add	%sp, 136, %g1
-	sub	%g3, %i0, %g3
-	cmp	%o7, 0
-	sdivx	%g3, 8, %g3
-	be,pn	%icc, .LL3
-	sra	%g3, 0, %l3
-	and	%o7, 1, %g3
-	cmp	%g3, 0
-	be,pn	%icc, .LL161
-	and	%o7, 2, %g3
-	ld 72(%i0),%f1
-	and	%o7, 2, %g3
-.LL161:
-	cmp	%g3, 0
-	be,pn	%icc, .LL162
-	and	%o7, 4, %g3
-	ld 80(%i0),%f3
-	and	%o7, 4, %g3
-.LL162:
-	cmp	%g3, 0
-	be,pn	%icc, .LL163
-	and	%o7, 8, %g3
-	ld 88(%i0),%f5
-	and	%o7, 8, %g3
-.LL163:
-	cmp	%g3, 0
-	be,pn	%icc, .LL164
-	and	%o7, 16, %g3
-	ld 96(%i0),%f7
-	and	%o7, 16, %g3
-.LL164:
-	cmp	%g3, 0
-	be,pn	%icc, .LL165
-	and	%o7, 32, %g3
-	ld 104(%i0),%f9
-	and	%o7, 32, %g3
-.LL165:
-	cmp	%g3, 0
-	be,pn	%icc, .LL166
-	and	%o7, 64, %g3
-	ld 112(%i0),%f11
-	and	%o7, 64, %g3
-.LL166:
-	cmp	%g3, 0
-	be,pn	%icc, .LL167
-	and	%o7, 128, %g3
-	ld 120(%i0),%f13
-	and	%o7, 128, %g3
-.LL167:
-	cmp	%g3, 0
-	be,pn	%icc, .LL168
-	and	%o7, 256, %g3
-	ld 128(%i0),%f15
-	and	%o7, 256, %g3
+	.register	%g2, $scratch
+	.register	%g3, $scratch
+	save	%sp, -192, %sp
+	ldx	[%i0+40], %g1
+	add	%i0, 64, %g2
+	lduw	[%i0+60], %g3
+	sub	%g1, %g2, %g1
+	cmp	%g3, 0
+	be,pt	%icc, .LL2
+	 srlx	%g1, 3, %o7
+	andcc	%g3, 1, %g0
+	bne,pt	%xcc, .LL161
+	 andcc	%g3, 2, %g0
+	bne,pt	%xcc, .LL162
+	 andcc	%g3, 4, %g0
+.LL222:
+	bne,pt	%xcc, .LL163
+	 andcc	%g3, 8, %g0
+.LL221:
+	bne,pt	%xcc, .LL164
+	 andcc	%g3, 16, %g0
+.LL220:
+	bne,pt	%xcc, .LL165
+	 andcc	%g3, 32, %g0
+.LL219:
+	bne,pt	%xcc, .LL166
+	 andcc	%g3, 64, %g0
+.LL218:
+	bne,pt	%xcc, .LL167
+	 andcc	%g3, 128, %g0
+.LL217:
+	bne,pt	%xcc, .LL168
+	 andcc	%g3, 256, %g0
+.LL216:
+	bne,pt	%xcc, .LL169
+	 andcc	%g3, 512, %g0
+.LL215:
+	bne,pt	%xcc, .LL170
+	 andcc	%g3, 1024, %g0
+.LL226:
+	bne,pt	%xcc, .LL171
+	 andcc	%g3, 2048, %g0
+.LL225:
+	bne,pt	%xcc, .LL172
+	 sethi	%hi(4096), %g1
+.LL224:
+	andcc	%g3, %g1, %g0
+	bne,pt	%icc, .LL173
+	 sethi	%hi(8192), %g1
+.LL223:
+	andcc	%g3, %g1, %g0
+	bne,pt	%icc, .LL174
+	 sethi	%hi(16384), %g1
+.LL228:
+	andcc	%g3, %g1, %g0
+	bne,pt	%icc, .LL175
+	 sethi	%hi(32768), %g1
+.LL227:
+	andcc	%g3, %g1, %g0
+	bne,pt	%icc, .LL176
+	 nop
+.LL2:
+	cmp	%o7, 6
+.LL229:
+	bg,pn	%icc, .LL213
+	 add	%o7, -6, %g1
+	ldx	[%i0], %g1
+.LL212:
+	ldx	[%i0+64], %o0
+	ldx	[%i0+72], %o1
+	ldx	[%i0+80], %o2
+	ldx	[%i0+88], %o3
+	ldx	[%i0+96], %o4
+	call	%g1, 0
+	 ldx	[%i0+104], %o5
+	mov	%o0, %l1
+	nop
+	lduw	[%i0+24], %g1
+	cmp	%g1, 1
+	be,pn	%icc, .LL38
+	 cmp	%g1, 0
+	be,a,pt	%icc, .LL214
+	 ldx	[%i0+16], %g1
+	cmp	%g1, 2
+	be,pn	%icc, .LL153
+	 cmp	%g1, 3
+	be,pn	%icc, .LL153
+	 cmp	%g1, 4
+	be,pn	%icc, .LL153
+	 cmp	%g1, 5
+	be,pn	%icc, .LL154
+	 cmp	%g1, 6
+	be,pn	%icc, .LL154
+	 cmp	%g1, 7
+	be,pn	%icc, .LL155
+	 cmp	%g1, 8
+	be,pn	%icc, .LL155
+	 cmp	%g1, 9
+	be,pn	%icc, .LL159
+	 cmp	%g1, 10
+	be,pn	%icc, .LL159
+	 cmp	%g1, 11
+	be,pn	%icc, .LL159
+	 cmp	%g1, 12
+	be,pn	%icc, .LL159
+	 cmp	%g1, 13
+	be,pn	%icc, .LL178
+	 cmp	%g1, 14
+	be,pn	%icc, .LL179
+	 cmp	%g1, 15
+	be,pn	%icc, .LL159
+	 cmp	%g1, 16
+	bne,pt	%icc, .LL38
+	 nop
+	lduw	[%i0+8], %g1
+	andcc	%g1, 1, %g0
+	be,pt	%xcc, .LL71
+	 andcc	%g1, 512, %g0
+	ldx	[%i0+32], %g1
+	cmp	%g1, 1
+	be,pn	%xcc, .LL180
+	 cmp	%g1, 2
+	be,pn	%xcc, .LL181
+	 cmp	%g1, 4
+	be,pn	%xcc, .LL182
+	 cmp	%g1, 8
+	be,pn	%xcc, .LL183
+	 add	%g1, 7, %g1
+	srlx	%g1, 3, %g1
+	addcc	%g1, -1, %g4
+	bneg,pn	%icc, .LL38
+	 sra	%g4, 0, %g1
+	ldx	[%i0+16], %i0
+	sllx	%g1, 3, %g2
+	add	%o0, %g2, %g3
+.LL82:
+	ldx	[%g3], %g1
+	add	%g4, -1, %g4
+	add	%g3, -8, %g3
+	cmp	%g4, -1
+	stx	%g1, [%g2+%i0]
+	bne,pt	%icc, .LL82
+	 add	%g2, -8, %g2
+.LL38:
+	return	%i7+8
+	 mov	0, %o0
+.LL159:
+	ldx	[%i0+16], %g1
+.LL214:
+	stx	%l1, [%g1]
+	return	%i7+8
+	 mov	0, %o0
+.LL176:
+	ldd [%i0+184],%f30
+	cmp	%o7, 6
+	ble,a,pt %icc, .LL212
+	 ldx	[%i0], %g1
+	add	%o7, -6, %g1
+.LL213:
+	mov	6, %g4
+	sra	%g1, 0, %g1
+	mov	0, %g3
+	sllx	%g1, 3, %g1
+	add	%g1, 15, %g1
+	and	%g1, -16, %g1
+	sub	%sp, %g1, %sp
+	add	%sp, 2238, %g2
+	and	%g2, -16, %g5
+.LL37:
+	add	%g3, %i0, %g1
+	add	%g4, 1, %g4
+	ldx	[%g1+112], %g2
+	cmp	%o7, %g4
+	stx	%g2, [%g3+%g5]
+	bne,pt	%icc, .LL37
+	 add	%g3, 8, %g3
+	ba,pt	%xcc, .LL212
+	 ldx	[%i0], %g1
 .LL168:
-	cmp	%g3, 0
-	be,pn	%icc, .LL169
-	and	%o7, 512, %g3
-	ld 136(%i0),%f17
-	and	%o7, 512, %g3
-.LL169:
-	cmp	%g3, 0
-	be,a,pn	%icc, .LL170
-	ld	[%i0+60], %o7
-	ld 144(%i0),%f19
-	ld	[%i0+60], %o7
-.LL170:
-	and	%o7, 1024, %g3
-	cmp	%g3, 0
-	be,pn	%icc, .LL171
-	and	%o7, 2048, %g3
-	ld 152(%i0),%f21
-	and	%o7, 2048, %g3
-.LL171:
-	cmp	%g3, 0
-	be,pn	%icc, .LL172
-	sethi	%hi(4096), %g3
-	ld 160(%i0),%f23
-	sethi	%hi(4096), %g3
+	ldd [%i0+120],%f14
+	andcc	%g3, 256, %g0
+	be,pt	%xcc, .LL215
+	 andcc	%g3, 512, %g0
+	ba,pt	%xcc, .LL169
+	 nop
+.LL167:
+	ldd [%i0+112],%f12
+	andcc	%g3, 128, %g0
+	be,pt	%xcc, .LL216
+	 andcc	%g3, 256, %g0
+	ba,pt	%xcc, .LL168
+	 nop
+.LL166:
+	ldd [%i0+104],%f10
+	andcc	%g3, 64, %g0
+	be,pt	%xcc, .LL217
+	 andcc	%g3, 128, %g0
+	ba,pt	%xcc, .LL167
+	 nop
+.LL165:
+	ldd [%i0+96],%f8
+	andcc	%g3, 32, %g0
+	be,pt	%xcc, .LL218
+	 andcc	%g3, 64, %g0
+	ba,pt	%xcc, .LL166
+	 nop
+.LL164:
+	ldd [%i0+88],%f6
+	andcc	%g3, 16, %g0
+	be,pt	%xcc, .LL219
+	 andcc	%g3, 32, %g0
+	ba,pt	%xcc, .LL165
+	 nop
+.LL163:
+	ldd [%i0+80],%f4
+	andcc	%g3, 8, %g0
+	be,pt	%xcc, .LL220
+	 andcc	%g3, 16, %g0
+	ba,pt	%xcc, .LL164
+	 nop
+.LL162:
+	ldd [%i0+72],%f2
+	andcc	%g3, 4, %g0
+	be,pt	%xcc, .LL221
+	 andcc	%g3, 8, %g0
+	ba,pt	%xcc, .LL163
+	 nop
+.LL161:
+	ldd [%i0+64],%f0
+	andcc	%g3, 2, %g0
+	be,pt	%xcc, .LL222
+	 andcc	%g3, 4, %g0
+	ba,pt	%xcc, .LL162
+	 nop
 .LL172:
-	andcc	%o7, %g3, %g0
-	be,pn	%icc, .LL173
-	sethi	%hi(8192), %g3
-	ld 168(%i0),%f25
-	sethi	%hi(8192), %g3
-.LL173:
-	andcc	%o7, %g3, %g0
-	be,pn	%icc, .LL174
-	sethi	%hi(16384), %g3
-	ld 176(%i0),%f27
-	sethi	%hi(16384), %g3
+	ldd [%i0+152],%f22
+	sethi	%hi(4096), %g1
+	andcc	%g3, %g1, %g0
+	be,pt	%icc, .LL223
+	 sethi	%hi(8192), %g1
+	ba,pt	%xcc, .LL173
+	 nop
+.LL171:
+	ldd [%i0+144],%f20
+	andcc	%g3, 2048, %g0
+	be,pt	%xcc, .LL224
+	 sethi	%hi(4096), %g1
+	ba,pt	%xcc, .LL172
+	 nop
+.LL170:
+	ldd [%i0+136],%f18
+	andcc	%g3, 1024, %g0
+	be,pt	%xcc, .LL225
+	 andcc	%g3, 2048, %g0
+	ba,pt	%xcc, .LL171
+	 nop
+.LL169:
+	ldd [%i0+128],%f16
+	andcc	%g3, 512, %g0
+	be,pt	%xcc, .LL226
+	 andcc	%g3, 1024, %g0
+	ba,pt	%xcc, .LL170
+	 nop
 .LL174:
-	andcc	%o7, %g3, %g0
-	be,pn	%icc, .LL175
-	sethi	%hi(32768), %g3
-	ld 184(%i0),%f29
-	sethi	%hi(32768), %g3
+	ldd [%i0+168],%f26
+	sethi	%hi(16384), %g1
+	andcc	%g3, %g1, %g0
+	be,pt	%icc, .LL227
+	 sethi	%hi(32768), %g1
+	ba,pt	%xcc, .LL175
+	 nop
+.LL173:
+	ldd [%i0+160],%f24
+	sethi	%hi(8192), %g1
+	andcc	%g3, %g1, %g0
+	be,pt	%icc, .LL228
+	 sethi	%hi(16384), %g1
+	ba,pt	%xcc, .LL174
+	 nop
 .LL175:
-	andcc	%o7, %g3, %g0
-	be,a,pn	%icc, .LL176
-	ld	[%i0+64], %g3
-	ld 192(%i0),%f31
-.LL3:
-	ld	[%i0+64], %g3
-.LL176:
-	cmp	%g3, 0
-	be,pn	%icc, .LL20
-	mov	%g3, %o7
-	and	%o7, 1, %g3
-	cmp	%g3, 0
-	be,pn	%icc, .LL177
-	and	%o7, 2, %g3
-	ldd 72(%i0),%f0
-	and	%o7, 2, %g3
-.LL177:
-	cmp	%g3, 0
-	be,pn	%icc, .LL178
-	and	%o7, 4, %g3
-	ldd 80(%i0),%f2
-	and	%o7, 4, %g3
+	ldd [%i0+176],%f28
+	sethi	%hi(32768), %g1
+	andcc	%g3, %g1, %g0
+	be,pt	%icc, .LL229
+	 cmp	%o7, 6
+	ba,pt	%xcc, .LL176
+	 nop
+.LL153:
+	ldx	[%i0+16], %g1
+	stb	%l1, [%g1]
+	return	%i7+8
+	 mov	0, %o0
+.LL154:
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 sth	%l1, [%g1]
+.LL155:
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 st	%l1, [%g1]
 .LL178:
-	cmp	%g3, 0
-	be,pn	%icc, .LL179
-	and	%o7, 8, %g3
-	ldd 88(%i0),%f4
-	and	%o7, 8, %g3
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 st	%f0, [%g1]
 .LL179:
-	cmp	%g3, 0
-	be,pn	%icc, .LL180
-	and	%o7, 16, %g3
-	ldd 96(%i0),%f6
-	and	%o7, 16, %g3
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 std	%f0, [%g1]
+.LL71:
+	be,pn	%xcc, .LL38
+	 nop
+	ldx	[%i0+32], %g2
+	add	%g2, -1, %g1
+	cmp	%g1, 31
+	bgu,pn	%xcc, .LL38
+	 cmp	%g2, 1
+	be,pn	%xcc, .LL184
+	 cmp	%g2, 2
+	be,pn	%xcc, .LL185
+	 cmp	%g2, 3
+	be,pn	%xcc, .LL186
+	 cmp	%g2, 4
+	be,pn	%xcc, .LL187
+	 cmp	%g2, 5
+	be,pn	%xcc, .LL188
+	 cmp	%g2, 6
+	be,pn	%xcc, .LL189
+	 cmp	%g2, 7
+	be,pn	%xcc, .LL190
+	 add	%g2, -8, %g1
+	cmp	%g1, 24
+	bgu,pn	%xcc, .LL38
+	 srax	%o0, 56, %g1
+	ldx	[%i0+16], %g2
+	srax	%o0, 48, %g3
+	stb	%g1, [%g2]
+	srax	%o0, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o0, 32, %g5
+	srax	%o0, 24, %o7
+	stb	%g3, [%g1+1]
+	srax	%o0, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o0, 8, %g3
+	stb	%g4, [%g2+2]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+3]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+4]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+5]
+	ldx	[%i0+16], %g2
+	stb	%g3, [%g2+6]
+	ldx	[%i0+16], %g1
+	stb	%o0, [%g1+7]
+	ldx	[%i0+32], %g1
+	cmp	%g1, 8
+	be,pn	%xcc, .LL38
+	 cmp	%g1, 9
+	be,pn	%xcc, .LL191
+	 cmp	%g1, 10
+	be,pn	%xcc, .LL192
+	 cmp	%g1, 11
+	be,pn	%xcc, .LL193
+	 cmp	%g1, 12
+	be,pn	%xcc, .LL194
+	 cmp	%g1, 13
+	be,pn	%xcc, .LL195
+	 cmp	%g1, 14
+	be,pn	%xcc, .LL196
+	 cmp	%g1, 15
+	be,pn	%xcc, .LL197
+	 add	%g1, -16, %g1
+	cmp	%g1, 16
+	bgu,pn	%xcc, .LL38
+	 srax	%o1, 56, %g1
+	ldx	[%i0+16], %g2
+	srax	%o1, 48, %g3
+	stb	%g1, [%g2+8]
+	srax	%o1, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o1, 32, %g5
+	srax	%o1, 24, %o7
+	stb	%g3, [%g1+9]
+	srax	%o1, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o1, 8, %g3
+	stb	%g4, [%g2+10]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+11]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+12]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+13]
+	ldx	[%i0+16], %g2
+	stb	%g3, [%g2+14]
+	ldx	[%i0+16], %g1
+	stb	%o1, [%g1+15]
+	ldx	[%i0+32], %g1
+	cmp	%g1, 16
+	be,pn	%xcc, .LL38
+	 cmp	%g1, 17
+	be,pn	%xcc, .LL198
+	 cmp	%g1, 18
+	be,pn	%xcc, .LL199
+	 cmp	%g1, 19
+	be,pn	%xcc, .LL200
+	 cmp	%g1, 20
+	be,pn	%xcc, .LL201
+	 cmp	%g1, 21
+	be,pn	%xcc, .LL202
+	 cmp	%g1, 22
+	be,pn	%xcc, .LL203
+	 cmp	%g1, 23
+	be,pn	%xcc, .LL204
+	 add	%g1, -24, %g1
+	cmp	%g1, 8
+	bgu,pn	%xcc, .LL38
+	 srax	%o2, 56, %g1
+	ldx	[%i0+16], %g2
+	srax	%o2, 48, %g3
+	stb	%g1, [%g2+16]
+	srax	%o2, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o2, 32, %g5
+	srax	%o2, 24, %o7
+	stb	%g3, [%g1+17]
+	srax	%o2, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o2, 8, %g3
+	stb	%g4, [%g2+18]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+19]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+20]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+21]
+	ldx	[%i0+16], %g2
+	stb	%g3, [%g2+22]
+	ldx	[%i0+16], %g1
+	stb	%o2, [%g1+23]
+	ldx	[%i0+32], %g1
+	cmp	%g1, 24
+	be,pn	%xcc, .LL38
+	 cmp	%g1, 25
+	be,pn	%xcc, .LL205
+	 cmp	%g1, 26
+	be,pn	%xcc, .LL206
+	 cmp	%g1, 27
+	be,pn	%xcc, .LL207
+	 cmp	%g1, 28
+	be,pn	%xcc, .LL208
+	 cmp	%g1, 29
+	be,pn	%xcc, .LL209
+	 cmp	%g1, 30
+	be,pn	%xcc, .LL210
+	 cmp	%g1, 31
+	be,pn	%xcc, .LL211
+	 cmp	%g1, 32
+	bne,pt	%xcc, .LL38
+	 srax	%o3, 56, %g1
+	ldx	[%i0+16], %g2
+	srax	%o3, 48, %g3
+	stb	%g1, [%g2+24]
+	srax	%o3, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o3, 32, %g5
+	srax	%o3, 24, %o7
+	stb	%g3, [%g1+25]
+	srax	%o3, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o3, 8, %g3
+	stb	%g4, [%g2+26]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+27]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+28]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+29]
+	ldx	[%i0+16], %g2
+	stb	%g3, [%g2+30]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%o3, [%g1+31]
 .LL180:
-	cmp	%g3, 0
-	be,pn	%icc, .LL181
-	and	%o7, 32, %g3
-	ldd 104(%i0),%f8
-	and	%o7, 32, %g3
+	ldx	[%i0+16], %g2
+	ldub	[%o0], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g1, [%g2]
 .LL181:
-	cmp	%g3, 0
-	be,pn	%icc, .LL182
-	and	%o7, 64, %g3
-	ldd 112(%i0),%f10
-	and	%o7, 64, %g3
-.LL182:
-	cmp	%g3, 0
-	be,pn	%icc, .LL183
-	and	%o7, 128, %g3
-	ldd 120(%i0),%f12
-	and	%o7, 128, %g3
+	ldx	[%i0+16], %g2
+	lduh	[%o0], %g1
+	ba,pt	%xcc, .LL38
+	 sth	%g1, [%g2]
 .LL183:
-	cmp	%g3, 0
-	be,pn	%icc, .LL184
-	and	%o7, 256, %g3
-	ldd 128(%i0),%f14
-	and	%o7, 256, %g3
-.LL184:
-	cmp	%g3, 0
-	be,pn	%icc, .LL185
-	and	%o7, 512, %g3
-	ldd 136(%i0),%f16
-	and	%o7, 512, %g3
-.LL185:
-	cmp	%g3, 0
-	be,pn	%icc, .LL186
-	and	%o7, 1024, %g3
-	ldd 144(%i0),%f18
-	and	%o7, 1024, %g3
-.LL186:
-	cmp	%g3, 0
-	be,pn	%icc, .LL187
-	and	%o7, 2048, %g3
-	ldd 152(%i0),%f20
-	and	%o7, 2048, %g3
-.LL187:
-	cmp	%g3, 0
-	be,pn	%icc, .LL188
-	sethi	%hi(4096), %g3
-	ldd 160(%i0),%f22
-	sethi	%hi(4096), %g3
-.LL188:
-	andcc	%o7, %g3, %g0
-	be,pn	%icc, .LL189
-	sethi	%hi(8192), %g3
-	ldd 168(%i0),%f24
-	sethi	%hi(8192), %g3
-.LL189:
-	andcc	%o7, %g3, %g0
-	be,pn	%icc, .LL190
-	sethi	%hi(16384), %g3
-	ldd 176(%i0),%f26
-	sethi	%hi(16384), %g3
-.LL190:
-	andcc	%o7, %g3, %g0
-	be,pn	%icc, .LL191
-	sethi	%hi(32768), %g3
-	ldd 184(%i0),%f28
-	sethi	%hi(32768), %g3
-.LL191:
-	andcc	%o7, %g3, %g0
-	be,pn	%icc, .LL192
-	mov	6, %l1
-	ldd 192(%i0),%f30
-.LL20:
-	mov	6, %l1
-.LL192:
-	cmp	%l1, %l3
-	bge,a,pt %icc, .LL193
-	ldx	[%i0], %g3
-	add	%i0, 72, %l2
-.LL40:
-	sllx	%l1, 3, %l0
-	add	%l1, 1, %g3
-	sra	%g3, 0, %l1
-	ldx	[%l2+%l0], %o7
-	cmp	%l1, %l3
-	bl,pt	%icc, .LL40
-	stx	%o7, [%g1+%l0]
-	ldx	[%i0], %g3
-.LL193:
-	ldx	[%i0+72], %o0
-	ldx	[%i0+80], %o1
-	ldx	[%i0+88], %o2
-	ldx	[%i0+96], %o3
-	ldx	[%i0+104], %o4
-	call	%g3, 0
-	ldx	[%i0+112], %o5
-	nop
-	ld	[%i0+24], %g3
-	cmp	%g3, 1
-	be,pn	%icc, .LL43
-	mov	%o0, %g1
-	cmp	%g3, 0
-	be,pn	%icc, .LL157
-	cmp	%g3, 2
-	be,pn	%icc, .LL158
-	cmp	%g3, 3
-	be,pn	%icc, .LL158
-	cmp	%g3, 4
-	bne,pt	%icc, .LL50
-	cmp	%g3, 5
-.LL158:
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%g1, [%g3]
-.LL50:
-	be,pn	%icc, .LL159
-	cmp	%g3, 6
-	bne,pt	%icc, .LL54
-	cmp	%g3, 7
-.LL159:
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	sth	%g1, [%g3]
-.LL54:
-	be,pn	%icc, .LL160
-	cmp	%g3, 8
-	bne,pt	%icc, .LL58
-	cmp	%g3, 9
-.LL160:
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	st	%g1, [%g3]
-.LL58:
-	be,pn	%icc, .LL157
-	cmp	%g3, 10
-	be,a,pn	%icc, .LL194
-	ldx	[%i0+16], %g3
-	ld	[%i0+24], %g3
-	cmp	%g3, 11
-	be,pn	%icc, .LL157
-	cmp	%g3, 12
-	be,pn	%icc, .LL157
-	cmp	%g3, 13
-	bne,pt	%icc, .LL68
-	cmp	%g3, 14
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	st	%f0, [%g3]
-.LL68:
-	bne,pt	%icc, .LL70
-	cmp	%g3, 15
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	std	%f0, [%g3]
-.LL70:
-	bne,pt	%icc, .LL72
-	cmp	%g3, 16
-.LL157:
-	ldx	[%i0+16], %g3
+	ldx	[%i0+16], %g2
+	ldx	[%o0], %g1
+	ba,pt	%xcc, .LL38
+	 stx	%g1, [%g2]
+.LL182:
+	ldx	[%i0+16], %g2
+	lduw	[%o0], %g1
+	ba,pt	%xcc, .LL38
+	 st	%g1, [%g2]
+.LL211:
+	ldx	[%i0+16], %g2
+	srax	%o3, 56, %g1
+	srax	%o3, 48, %g3
+	stb	%g1, [%g2+24]
+	srax	%o3, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o3, 32, %g5
+	srax	%o3, 24, %o7
+	stb	%g3, [%g1+25]
+	srax	%o3, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o3, 8, %g3
+	stb	%g4, [%g2+26]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+27]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+28]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+29]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g3, [%g2+30]
+.LL210:
+	ldx	[%i0+16], %g2
+	srax	%o3, 56, %g1
+	srax	%o3, 48, %g3
+	stb	%g1, [%g2+24]
+	srax	%o3, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o3, 32, %g5
+	srax	%o3, 24, %o7
+	stb	%g3, [%g1+25]
+	srax	%o3, 16, %l0
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+26]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+27]
+	ldx	[%i0+16], %g1
+	stb	%o7, [%g1+28]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%l0, [%g2+29]
+.LL209:
+	ldx	[%i0+16], %g2
+	srax	%o3, 56, %g1
+	srax	%o3, 48, %g3
+	stb	%g1, [%g2+24]
+	srax	%o3, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o3, 32, %g5
+	srax	%o3, 24, %o7
+	stb	%g3, [%g2+25]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+26]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+27]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%o7, [%g1+28]
+.LL208:
+	ldx	[%i0+16], %g2
+	srax	%o3, 56, %g1
+	srax	%o3, 48, %g3
+	stb	%g1, [%g2+24]
+	srax	%o3, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o3, 32, %g5
+	stb	%g3, [%g2+25]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+26]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g5, [%g2+27]
+.LL207:
+	ldx	[%i0+16], %g2
+	srax	%o3, 56, %g1
+	srax	%o3, 48, %g3
+	stb	%g1, [%g2+24]
+	srax	%o3, 40, %g4
+	ldx	[%i0+16], %g1
+	stb	%g3, [%g1+25]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g2+26]
+.LL206:
+	ldx	[%i0+16], %g3
+	srax	%o3, 56, %g2
+	srax	%o3, 48, %g4
+	stb	%g2, [%g3+24]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g1+25]
+.LL205:
+	ldx	[%i0+16], %g2
+	srax	%o3, 56, %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g1, [%g2+24]
+.LL204:
+	ldx	[%i0+16], %g2
+	srax	%o2, 56, %g1
+	srax	%o2, 48, %g3
+	stb	%g1, [%g2+16]
+	srax	%o2, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o2, 32, %g5
+	srax	%o2, 24, %o7
+	stb	%g3, [%g1+17]
+	srax	%o2, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o2, 8, %g3
+	stb	%g4, [%g2+18]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+19]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+20]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+21]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g3, [%g2+22]
+.LL203:
+	ldx	[%i0+16], %g2
+	srax	%o2, 56, %g1
+	srax	%o2, 48, %g3
+	stb	%g1, [%g2+16]
+	srax	%o2, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o2, 32, %g5
+	srax	%o2, 24, %o7
+	stb	%g3, [%g1+17]
+	srax	%o2, 16, %l0
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+18]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+19]
+	ldx	[%i0+16], %g1
+	stb	%o7, [%g1+20]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%l0, [%g2+21]
+.LL202:
+	ldx	[%i0+16], %g2
+	srax	%o2, 56, %g1
+	srax	%o2, 48, %g3
+	stb	%g1, [%g2+16]
+	srax	%o2, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o2, 32, %g5
+	srax	%o2, 24, %o7
+	stb	%g3, [%g2+17]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+18]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+19]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%o7, [%g1+20]
+.LL201:
+	ldx	[%i0+16], %g2
+	srax	%o2, 56, %g1
+	srax	%o2, 48, %g3
+	stb	%g1, [%g2+16]
+	srax	%o2, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o2, 32, %g5
+	stb	%g3, [%g2+17]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+18]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g5, [%g2+19]
+.LL200:
+	ldx	[%i0+16], %g2
+	srax	%o2, 56, %g1
+	srax	%o2, 48, %g3
+	stb	%g1, [%g2+16]
+	srax	%o2, 40, %g4
+	ldx	[%i0+16], %g1
+	stb	%g3, [%g1+17]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g2+18]
+.LL199:
+	ldx	[%i0+16], %g3
+	srax	%o2, 56, %g2
+	srax	%o2, 48, %g4
+	stb	%g2, [%g3+16]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g1+17]
+.LL198:
+	ldx	[%i0+16], %g2
+	srax	%o2, 56, %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g1, [%g2+16]
+.LL197:
+	ldx	[%i0+16], %g2
+	srax	%o1, 56, %g1
+	srax	%o1, 48, %g3
+	stb	%g1, [%g2+8]
+	srax	%o1, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o1, 32, %g5
+	srax	%o1, 24, %o7
+	stb	%g3, [%g1+9]
+	srax	%o1, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o1, 8, %g3
+	stb	%g4, [%g2+10]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+11]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+12]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+13]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g3, [%g2+14]
+.LL196:
+	ldx	[%i0+16], %g2
+	srax	%o1, 56, %g1
+	srax	%o1, 48, %g3
+	stb	%g1, [%g2+8]
+	srax	%o1, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o1, 32, %g5
+	srax	%o1, 24, %o7
+	stb	%g3, [%g1+9]
+	srax	%o1, 16, %l0
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+10]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+11]
+	ldx	[%i0+16], %g1
+	stb	%o7, [%g1+12]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%l0, [%g2+13]
+.LL195:
+	ldx	[%i0+16], %g2
+	srax	%o1, 56, %g1
+	srax	%o1, 48, %g3
+	stb	%g1, [%g2+8]
+	srax	%o1, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o1, 32, %g5
+	srax	%o1, 24, %o7
+	stb	%g3, [%g2+9]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+10]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+11]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%o7, [%g1+12]
 .LL194:
-	ba,pt	%xcc, .LL43
-	stx	%g1, [%g3]
-.LL72:
-	bne,pt	%icc, .LL43
-	nop
-	ld	[%i0+8], %o7
-	and	%o7, 1, %g3
-	cmp	%g3, 0
-	be,pn	%icc, .LL75
-	and	%o7, 512, %g3
-	ldx	[%i0+32], %g3
-	cmp	%g3, 1
-	bne,pt	%xcc, .LL76
-	cmp	%g3, 2
-	ldx	[%i0+16], %o7
-	ldub	[%g1], %g3
-	ba,pt	%xcc, .LL43
-	stb	%g3, [%o7]
-.LL76:
-	bne,pt	%xcc, .LL78
-	cmp	%g3, 4
-	ldx	[%i0+16], %o7
-	lduh	[%g1], %g3
-	ba,pt	%xcc, .LL43
-	sth	%g3, [%o7]
-.LL78:
-	bne,pt	%xcc, .LL80
-	cmp	%g3, 8
-	ldx	[%i0+16], %o7
-	ld	[%g1], %g3
-	ba,pt	%xcc, .LL43
-	st	%g3, [%o7]
-.LL80:
-	bne,pt	%xcc, .LL82
-	add	%g3, 7, %g3
-	ldx	[%i0+16], %o7
-	ldx	[%g1], %g3
-	ba,pt	%xcc, .LL43
-	stx	%g3, [%o7]
-.LL82:
-	srlx	%g3, 3, %g3
-	add	%g3, -1, %g3
-	cmp	%g3, 0
-	bl,pn	%icc, .LL43
-	sra	%g3, 0, %g3
-.LL86:
-	sllx	%g3, 3, %l0
-	add	%g3, -1, %l1
-	ldx	[%g1+%l0], %g3
-	ldx	[%i0+16], %o7
-	stx	%g3, [%o7+%l0]
-	cmp	%l1, 0
-	bge,pt	%icc, .LL86
-	sra	%l1, 0, %g3
-	ba,pt	%xcc, .LL43
-	 nop
-.LL75:
-	cmp	%g3, 0
-	be,pn	%icc, .LL43
-	nop
-	ldx	[%i0+32], %o7
-	add	%o7, -1, %g3
-	cmp	%g3, 31
-	bgu,pn	%xcc, .LL43
-	cmp	%o7, 1
-	bne,pt	%xcc, .LL91
-	cmp	%o7, 2
-	ldx	[%i0+16], %o7
-	srax	%g1, 56, %g3
-	ba,pt	%xcc, .LL43
-	stb	%g3, [%o7]
-.LL91:
-	bne,pt	%xcc, .LL93
-	cmp	%o7, 3
-	ldx	[%i0+16], %o7
-	srax	%g1, 56, %g3
-	stb	%g3, [%o7]
-	srax	%g1, 48, %l0
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%g3+1]
-.LL93:
-	bne,pt	%xcc, .LL95
-	cmp	%o7, 4
-	ldx	[%i0+16], %o7
-	srax	%g1, 56, %g3
-	stb	%g3, [%o7]
-	srax	%g1, 48, %l0
-	ldx	[%i0+16], %o7
-	srax	%g1, 40, %l1
-	stb	%l0, [%o7+1]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l1, [%g3+2]
-.LL95:
-	bne,pt	%xcc, .LL97
-	cmp	%o7, 5
-	ldx	[%i0+16], %o7
-	srax	%g1, 56, %g3
-	stb	%g3, [%o7]
-	srax	%g1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%g1, 40, %l1
-	stb	%l0, [%g3+1]
-	srax	%g1, 32, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+2]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%o7+3]
-.LL97:
-	bne,pt	%xcc, .LL99
-	cmp	%o7, 6
-	ldx	[%i0+16], %o7
-	srax	%g1, 56, %g3
-	stb	%g3, [%o7]
-	srax	%g1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%g1, 40, %l1
-	stb	%l0, [%g3+1]
-	srax	%g1, 32, %l2
-	ldx	[%i0+16], %o7
-	srax	%g1, 24, %l0
-	stb	%l1, [%o7+2]
-	ldx	[%i0+16], %g3
-	stb	%l2, [%g3+3]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%o7+4]
-.LL99:
-	bne,pt	%xcc, .LL101
-	cmp	%o7, 7
-	ldx	[%i0+16], %o7
-	srax	%g1, 56, %g3
-	stb	%g3, [%o7]
-	srax	%g1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%g1, 40, %o7
-	stb	%l0, [%g3+1]
-	srax	%g1, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%g1, 24, %l0
-	stb	%o7, [%g3+2]
-	srax	%g1, 16, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+3]
-	ldx	[%i0+16], %o7
-	stb	%l0, [%o7+4]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%g3+5]
-.LL101:
-	bne,pt	%xcc, .LL103
-	add	%o7, -8, %g3
-	ldx	[%i0+16], %o7
-	srax	%g1, 56, %g3
-	stb	%g3, [%o7]
-	srax	%g1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%g1, 40, %o7
-	stb	%l0, [%g3+1]
-	srax	%g1, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%g1, 24, %l0
-	stb	%o7, [%g3+2]
-	srax	%g1, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%g1, 8, %l3
-	stb	%l1, [%o7+3]
-	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+4]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+5]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l3, [%g3+6]
-.LL103:
-	cmp	%g3, 24
-	bgu,pn	%xcc, .LL43
-	srax	%g1, 56, %g3
-	ldx	[%i0+16], %o7
-	stb	%g3, [%o7]
-	srax	%g1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%g1, 40, %o7
-	stb	%l0, [%g3+1]
-	srax	%g1, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%g1, 24, %l0
-	stb	%o7, [%g3+2]
-	srax	%g1, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%g1, 8, %l3
-	stb	%l1, [%o7+3]
-	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+4]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+5]
-	ldx	[%i0+16], %g3
-	stb	%l3, [%g3+6]
-	ldx	[%i0+16], %o7
-	stb	%g1, [%o7+7]
-	ldx	[%i0+32], %g3
-	cmp	%g3, 8
-	be,pn	%xcc, .LL43
-	cmp	%g3, 9
-	bne,pt	%xcc, .LL108
-	cmp	%g3, 10
-	ldx	[%i0+16], %o7
-	srax	%o1, 56, %g3
-	ba,pt	%xcc, .LL43
-	stb	%g3, [%o7+8]
-.LL108:
-	bne,pt	%xcc, .LL110
-	cmp	%g3, 11
-	ldx	[%i0+16], %o7
-	srax	%o1, 56, %g3
-	stb	%g3, [%o7+8]
-	srax	%o1, 48, %l0
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%g3+9]
-.LL110:
-	bne,pt	%xcc, .LL112
-	cmp	%g3, 12
-	ldx	[%i0+16], %o7
-	srax	%o1, 56, %g3
-	stb	%g3, [%o7+8]
-	srax	%o1, 48, %l0
-	ldx	[%i0+16], %o7
-	srax	%o1, 40, %l1
-	stb	%l0, [%o7+9]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l1, [%g3+10]
-.LL112:
-	bne,pt	%xcc, .LL114
-	cmp	%g3, 13
-	ldx	[%i0+16], %o7
-	srax	%o1, 56, %g3
-	stb	%g3, [%o7+8]
-	srax	%o1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o1, 40, %l1
-	stb	%l0, [%g3+9]
-	srax	%o1, 32, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+10]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%o7+11]
-.LL114:
-	bne,pt	%xcc, .LL116
-	cmp	%g3, 14
-	ldx	[%i0+16], %o7
-	srax	%o1, 56, %g3
-	stb	%g3, [%o7+8]
-	srax	%o1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o1, 40, %l1
-	stb	%l0, [%g3+9]
-	srax	%o1, 32, %l2
-	ldx	[%i0+16], %o7
-	srax	%o1, 24, %l0
-	stb	%l1, [%o7+10]
-	ldx	[%i0+16], %g3
-	stb	%l2, [%g3+11]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%o7+12]
-.LL116:
-	bne,pt	%xcc, .LL118
-	cmp	%g3, 15
-	ldx	[%i0+16], %o7
-	srax	%o1, 56, %g3
-	stb	%g3, [%o7+8]
-	srax	%o1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o1, 40, %o7
-	stb	%l0, [%g3+9]
-	srax	%o1, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o1, 24, %l0
-	stb	%o7, [%g3+10]
-	srax	%o1, 16, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+11]
-	ldx	[%i0+16], %o7
-	stb	%l0, [%o7+12]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%g3+13]
-.LL118:
-	bne,pt	%xcc, .LL120
-	add	%g3, -16, %g3
-	ldx	[%i0+16], %o7
-	srax	%o1, 56, %g3
-	stb	%g3, [%o7+8]
-	srax	%o1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o1, 40, %o7
-	stb	%l0, [%g3+9]
-	srax	%o1, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o1, 24, %l0
-	stb	%o7, [%g3+10]
-	srax	%o1, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%o1, 8, %l3
-	stb	%l1, [%o7+11]
-	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+12]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+13]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l3, [%g3+14]
-.LL120:
-	cmp	%g3, 16
-	bgu,pn	%xcc, .LL43
-	srax	%o1, 56, %g3
-	ldx	[%i0+16], %o7
-	stb	%g3, [%o7+8]
-	srax	%o1, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o1, 40, %o7
-	stb	%l0, [%g3+9]
-	srax	%o1, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o1, 24, %l0
-	stb	%o7, [%g3+10]
-	srax	%o1, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%o1, 8, %l3
-	stb	%l1, [%o7+11]
-	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+12]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+13]
-	ldx	[%i0+16], %g3
-	stb	%l3, [%g3+14]
-	ldx	[%i0+16], %o7
-	stb	%o1, [%o7+15]
-	ldx	[%i0+32], %g3
-	cmp	%g3, 16
-	be,pn	%xcc, .LL43
-	cmp	%g3, 17
-	bne,pt	%xcc, .LL125
-	cmp	%g3, 18
-	ldx	[%i0+16], %o7
-	srax	%o2, 56, %g3
-	ba,pt	%xcc, .LL43
-	stb	%g3, [%o7+16]
-.LL125:
-	bne,pt	%xcc, .LL127
-	cmp	%g3, 19
-	ldx	[%i0+16], %o7
-	srax	%o2, 56, %g3
-	stb	%g3, [%o7+16]
-	srax	%o2, 48, %l0
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%g3+17]
-.LL127:
-	bne,pt	%xcc, .LL129
-	cmp	%g3, 20
-	ldx	[%i0+16], %o7
-	srax	%o2, 56, %g3
-	stb	%g3, [%o7+16]
-	srax	%o2, 48, %l0
-	ldx	[%i0+16], %o7
-	srax	%o2, 40, %l1
-	stb	%l0, [%o7+17]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l1, [%g3+18]
-.LL129:
-	bne,pt	%xcc, .LL131
-	cmp	%g3, 21
-	ldx	[%i0+16], %o7
-	srax	%o2, 56, %g3
-	stb	%g3, [%o7+16]
-	srax	%o2, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o2, 40, %l1
-	stb	%l0, [%g3+17]
-	srax	%o2, 32, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+18]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%o7+19]
-.LL131:
-	bne,pt	%xcc, .LL133
-	cmp	%g3, 22
-	ldx	[%i0+16], %o7
-	srax	%o2, 56, %g3
-	stb	%g3, [%o7+16]
-	srax	%o2, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o2, 40, %l1
-	stb	%l0, [%g3+17]
-	srax	%o2, 32, %l2
-	ldx	[%i0+16], %o7
-	srax	%o2, 24, %l0
-	stb	%l1, [%o7+18]
-	ldx	[%i0+16], %g3
-	stb	%l2, [%g3+19]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%o7+20]
-.LL133:
-	bne,pt	%xcc, .LL135
-	cmp	%g3, 23
-	ldx	[%i0+16], %o7
-	srax	%o2, 56, %g3
-	stb	%g3, [%o7+16]
-	srax	%o2, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o2, 40, %o7
-	stb	%l0, [%g3+17]
-	srax	%o2, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o2, 24, %l0
-	stb	%o7, [%g3+18]
-	srax	%o2, 16, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+19]
-	ldx	[%i0+16], %o7
-	stb	%l0, [%o7+20]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%g3+21]
-.LL135:
-	bne,pt	%xcc, .LL137
-	add	%g3, -24, %g3
-	ldx	[%i0+16], %o7
-	srax	%o2, 56, %g3
-	stb	%g3, [%o7+16]
-	srax	%o2, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o2, 40, %o7
-	stb	%l0, [%g3+17]
-	srax	%o2, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o2, 24, %l0
-	stb	%o7, [%g3+18]
-	srax	%o2, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%o2, 8, %l3
-	stb	%l1, [%o7+19]
-	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+20]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+21]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l3, [%g3+22]
-.LL137:
-	cmp	%g3, 8
-	bgu,pn	%xcc, .LL43
-	srax	%o2, 56, %g3
-	ldx	[%i0+16], %o7
-	stb	%g3, [%o7+16]
-	srax	%o2, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o2, 40, %o7
-	stb	%l0, [%g3+17]
-	srax	%o2, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o2, 24, %l0
-	stb	%o7, [%g3+18]
-	srax	%o2, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%o2, 8, %l3
-	stb	%l1, [%o7+19]
-	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+20]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+21]
-	ldx	[%i0+16], %g3
-	stb	%l3, [%g3+22]
-	ldx	[%i0+16], %o7
-	stb	%o2, [%o7+23]
-	ldx	[%i0+32], %g3
-	cmp	%g3, 24
-	be,pn	%xcc, .LL43
-	cmp	%g3, 25
-	bne,pt	%xcc, .LL142
-	cmp	%g3, 26
-	ldx	[%i0+16], %o7
-	srax	%o3, 56, %g3
-	ba,pt	%xcc, .LL43
-	stb	%g3, [%o7+24]
-.LL142:
-	bne,pt	%xcc, .LL144
-	cmp	%g3, 27
-	ldx	[%i0+16], %o7
-	srax	%o3, 56, %g3
-	stb	%g3, [%o7+24]
-	srax	%o3, 48, %l0
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%g3+25]
-.LL144:
-	bne,pt	%xcc, .LL146
-	cmp	%g3, 28
-	ldx	[%i0+16], %o7
-	srax	%o3, 56, %g3
-	stb	%g3, [%o7+24]
-	srax	%o3, 48, %l0
-	ldx	[%i0+16], %o7
-	srax	%o3, 40, %l1
-	stb	%l0, [%o7+25]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l1, [%g3+26]
-.LL146:
-	bne,pt	%xcc, .LL148
-	cmp	%g3, 29
-	ldx	[%i0+16], %o7
-	srax	%o3, 56, %g3
-	stb	%g3, [%o7+24]
-	srax	%o3, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o3, 40, %l1
-	stb	%l0, [%g3+25]
-	srax	%o3, 32, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+26]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%o7+27]
-.LL148:
-	bne,pt	%xcc, .LL150
-	cmp	%g3, 30
-	ldx	[%i0+16], %o7
-	srax	%o3, 56, %g3
-	stb	%g3, [%o7+24]
-	srax	%o3, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o3, 40, %l1
-	stb	%l0, [%g3+25]
-	srax	%o3, 32, %l2
-	ldx	[%i0+16], %o7
-	srax	%o3, 24, %l0
-	stb	%l1, [%o7+26]
-	ldx	[%i0+16], %g3
-	stb	%l2, [%g3+27]
-	ldx	[%i0+16], %o7
-	ba,pt	%xcc, .LL43
-	stb	%l0, [%o7+28]
-.LL150:
-	bne,pt	%xcc, .LL152
-	cmp	%g3, 31
-	ldx	[%i0+16], %o7
-	srax	%o3, 56, %g3
-	stb	%g3, [%o7+24]
-	srax	%o3, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o3, 40, %o7
-	stb	%l0, [%g3+25]
-	srax	%o3, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o3, 24, %l0
-	stb	%o7, [%g3+26]
-	srax	%o3, 16, %l2
-	ldx	[%i0+16], %g3
-	stb	%l1, [%g3+27]
-	ldx	[%i0+16], %o7
-	stb	%l0, [%o7+28]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l2, [%g3+29]
-.LL152:
-	bne,pt	%xcc, .LL154
-	cmp	%g3, 32
-	ldx	[%i0+16], %o7
-	srax	%o3, 56, %g3
-	stb	%g3, [%o7+24]
-	srax	%o3, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o3, 40, %o7
-	stb	%l0, [%g3+25]
-	srax	%o3, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o3, 24, %l0
-	stb	%o7, [%g3+26]
-	srax	%o3, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%o3, 8, %l3
-	stb	%l1, [%o7+27]
-	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+28]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+29]
-	ldx	[%i0+16], %g3
-	ba,pt	%xcc, .LL43
-	stb	%l3, [%g3+30]
-.LL154:
-	bne,pt	%xcc, .LL43
-	srax	%o3, 56, %g3
-	ldx	[%i0+16], %o7
-	stb	%g3, [%o7+24]
-	srax	%o3, 48, %l0
-	ldx	[%i0+16], %g3
-	srax	%o3, 40, %o7
-	stb	%l0, [%g3+25]
-	srax	%o3, 32, %l1
-	ldx	[%i0+16], %g3
-	srax	%o3, 24, %l0
-	stb	%o7, [%g3+26]
-	srax	%o3, 16, %l2
-	ldx	[%i0+16], %o7
-	srax	%o3, 8, %l3
-	stb	%l1, [%o7+27]
+	ldx	[%i0+16], %g2
+	srax	%o1, 56, %g1
+	srax	%o1, 48, %g3
+	stb	%g1, [%g2+8]
+	srax	%o1, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o1, 32, %g5
+	stb	%g3, [%g2+9]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+10]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g5, [%g2+11]
+.LL193:
+	ldx	[%i0+16], %g2
+	srax	%o1, 56, %g1
+	srax	%o1, 48, %g3
+	stb	%g1, [%g2+8]
+	srax	%o1, 40, %g4
+	ldx	[%i0+16], %g1
+	stb	%g3, [%g1+9]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g2+10]
+.LL192:
 	ldx	[%i0+16], %g3
-	stb	%l0, [%g3+28]
-	ldx	[%i0+16], %o7
-	stb	%l2, [%o7+29]
+	srax	%o1, 56, %g2
+	srax	%o1, 48, %g4
+	stb	%g2, [%g3+8]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g1+9]
+.LL191:
+	ldx	[%i0+16], %g2
+	srax	%o1, 56, %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g1, [%g2+8]
+.LL190:
+	ldx	[%i0+16], %g2
+	srax	%o0, 56, %g1
+	srax	%o0, 48, %g3
+	stb	%g1, [%g2]
+	srax	%o0, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o0, 32, %g5
+	srax	%o0, 24, %o7
+	stb	%g3, [%g1+1]
+	srax	%o0, 16, %l0
+	ldx	[%i0+16], %g2
+	srax	%o0, 8, %g3
+	stb	%g4, [%g2+2]
+	ldx	[%i0+16], %g1
+	stb	%g5, [%g1+3]
+	ldx	[%i0+16], %g2
+	stb	%o7, [%g2+4]
+	ldx	[%i0+16], %g1
+	stb	%l0, [%g1+5]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g3, [%g2+6]
+.LL189:
+	ldx	[%i0+16], %g2
+	srax	%o0, 56, %g1
+	srax	%o0, 48, %g3
+	stb	%g1, [%g2]
+	srax	%o0, 40, %g4
+	ldx	[%i0+16], %g1
+	srax	%o0, 32, %g5
+	srax	%o0, 24, %o7
+	stb	%g3, [%g1+1]
+	srax	%o0, 16, %l0
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+2]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+3]
+	ldx	[%i0+16], %g1
+	stb	%o7, [%g1+4]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%l0, [%g2+5]
+.LL188:
+	ldx	[%i0+16], %g2
+	srax	%o0, 56, %g1
+	srax	%o0, 48, %g3
+	stb	%g1, [%g2]
+	srax	%o0, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o0, 32, %g5
+	srax	%o0, 24, %o7
+	stb	%g3, [%g2+1]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+2]
+	ldx	[%i0+16], %g2
+	stb	%g5, [%g2+3]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%o7, [%g1+4]
+.LL187:
+	ldx	[%i0+16], %g2
+	srax	%o0, 56, %g1
+	srax	%o0, 48, %g3
+	stb	%g1, [%g2]
+	srax	%o0, 40, %g4
+	ldx	[%i0+16], %g2
+	srax	%o0, 32, %g5
+	stb	%g3, [%g2+1]
+	ldx	[%i0+16], %g1
+	stb	%g4, [%g1+2]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g5, [%g2+3]
+.LL186:
+	ldx	[%i0+16], %g2
+	srax	%o0, 56, %g1
+	srax	%o0, 48, %g3
+	stb	%g1, [%g2]
+	srax	%o0, 40, %g4
+	ldx	[%i0+16], %g1
+	stb	%g3, [%g1+1]
+	ldx	[%i0+16], %g2
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g2+2]
+.LL185:
 	ldx	[%i0+16], %g3
-	stb	%l3, [%g3+30]
-	ldx	[%i0+16], %o7
-	stb	%o3, [%o7+31]
-.LL43:
-	ret
-	restore %g0, 0, %o0
-.LLfe1:
-	.size	 __builtin_avcall,.LLfe1-__builtin_avcall
-	.ident	"GCC: (GNU) 2.95.2 19991024 (release)"
+	srax	%o0, 56, %g2
+	srax	%o0, 48, %g4
+	stb	%g2, [%g3]
+	ldx	[%i0+16], %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g4, [%g1+1]
+.LL184:
+	ldx	[%i0+16], %g2
+	srax	%o0, 56, %g1
+	ba,pt	%xcc, .LL38
+	 stb	%g1, [%g2]
+	.size	__builtin_avcall, .-__builtin_avcall
+	.ident	"GCC: (GNU) 4.1.3 20070620 prerelease (NetBSD nb1 20070620)"
